n_rows <- nrow(DB_projet_full)
n_cols <- ncol(DB_projet_full)
n_personnes <- nrow(table(DB_projet_full$id_pers))
n_trips <- nrow(table(DB_projet_full$id_depl))
n_mng <- nrow(table(DB_projet_full$id_men))
n_missing <- sum(is.na(DB_projet_full))
cat("Nombre d'observations :", n_rows, "\n")
cat("Nombre de variables :", n_cols, "\n")
cat("Nombre de personnes :", n_personnes, "\n")
cat("Nombre de trajets :", n_trips, "\n")
cat("Nombre de ménages :", n_mng, "\n")
cat("Nombre de valeurs manquantes :", n_missing, "\n")
load("allgre.PB_V2.RData")
DB_projet_full <- allgre.PB_V2
n_rows <- nrow(DB_projet_full)
n_cols <- ncol(DB_projet_full)
n_personnes <- nrow(table(DB_projet_full$id_pers))
n_trips <- nrow(table(DB_projet_full$id_traj))
n_mng <- nrow(table(DB_projet_full$id_men))
n_missing <- sum(is.na(DB_projet_full))
cat("Nombre d'observations :", n_rows, "\n")
cat("Nombre de variables :", n_cols, "\n")
cat("Nombre de personnes :", n_personnes, "\n")
cat("Nombre de trajets :", n_trips, "\n")
cat("Nombre de ménages :", n_mng, "\n")
cat("Nombre de valeurs manquantes :", n_missing, "\n")
load("allgre.PB_V2.RData")
DB_projet_full <- allgre.PB_V2
n_rows <- nrow(DB_projet_full)
n_cols <- ncol(DB_projet_full)
n_personnes <- nrow(table(DB_projet_full$id_pers))
n_trips <- nrow(table(DB_projet_full$id_depl))
n_mng <- nrow(table(DB_projet_full$id_men))
n_missing <- sum(is.na(DB_projet_full))
cat("Nombre d'observations :", n_rows, "\n")
cat("Nombre de variables :", n_cols, "\n")
cat("Nombre de personnes :", n_personnes, "\n")
cat("Nombre de trajets :", n_trips, "\n")
cat("Nombre de ménages :", n_mng, "\n")
cat("Nombre de valeurs manquantes :", n_missing, "\n")
load("allgre.PB_V2.RData")
DB_projet_full <- allgre.PB_V2
n_rows <- nrow(DB_projet_full)
n_cols <- ncol(DB_projet_full)
n_personnes <- nrow(table(DB_projet_full$id_pers))
n_trips <- nrow(table(DB_projet_full$id_depl))
n_mng <- nrow(table(DB_projet_full$id_men))
n_missing <- sum(is.na(DB_projet_full))
DB_without_na <- DB_projet_full[complete.cases(DB_projet_full),]
n_rows_without_na <- nrow(DB_without_na)
cat("Nombre d'observations :", n_rows, "\n")
cat("Nombre de variables :", n_cols, "\n")
cat("Nombre de personnes :", n_personnes, "\n")
cat("Nombre de trajets :", n_trips, "\n")
cat("Nombre de ménages :", n_mng, "\n")
cat("Nombre de valeurs manquantes :", n_missing, "\n")
cat("Nombre d'observations sans valeurs manquantes :", n_rows_without_na, "\n")
load("allgre.PB_V2.RData")
DB_projet_full <- allgre.PB_V2
n_rows <- nrow(DB_projet_full)
n_cols <- ncol(DB_projet_full)
n_personnes <- nrow(table(DB_projet_full$id_pers))
n_trips <- nrow(table(DB_projet_full$id_depl))
n_mng <- nrow(table(DB_projet_full$id_men))
n_missing <- sum(is.na(DB_projet_full))
cat("Nombre d'observations :", n_rows, "\n")
cat("Nombre de variables :", n_cols, "\n")
cat("Nombre de personnes :", n_personnes, "\n")
cat("Nombre de trajets :", n_trips, "\n")
cat("Nombre de ménages :", n_mng, "\n")
cat("Nombre de valeurs manquantes :", n_missing, "\n")
cat("Proportion de valeurs manquantes :", round(n_missing/n_rows, 2), "\n")
load("allgre.PB_V2.RData")
DB_projet_full <- allgre.PB_V2
n_rows <- nrow(DB_projet_full)
n_cols <- ncol(DB_projet_full)
n_personnes <- nrow(table(DB_projet_full$id_pers))
n_trips <- nrow(table(DB_projet_full$id_depl))
n_mng <- nrow(table(DB_projet_full$id_men))
n_missing <- sum(is.na(DB_projet_full))
n_values <- n_rows * n_cols
cat("Nombre d'observations :", n_rows, "\n")
cat("Nombre de variables :", n_cols, "\n")
cat("Nombre de personnes :", n_personnes, "\n")
cat("Nombre de trajets :", n_trips, "\n")
cat("Nombre de ménages :", n_mng, "\n")
cat("Nombre de valeurs manquantes :", n_missing, "\n")
cat("Proportion de valeurs manquantes :", round(n_missing/n_values, 2), "\n")
load("allgre.PB_V2.RData")
DB_projet_full <- allgre.PB_V2
n_rows <- nrow(DB_projet_full)
n_cols <- ncol(DB_projet_full)
n_personnes <- nrow(table(DB_projet_full$id_pers))
n_trips <- nrow(table(DB_projet_full$id_depl))
n_mng <- nrow(table(DB_projet_full$id_men))
n_missing <- sum(is.na(DB_projet_full))
n_values <- n_rows * n_cols
cat("Nombre d'observations :", n_rows, "\n")
cat("Nombre de variables :", n_cols, "\n")
cat("Nombre de personnes :", n_personnes, "\n")
cat("Nombre de trajets :", n_trips, "\n")
cat("Nombre de ménages :", n_mng, "\n")
cat("Nombre de valeurs manquantes :", n_missing, "\n")
cat("Proportion de valeurs manquantes :", round(n_missing/n_values, 4), "\n")
load("allgre.PB_V2.RData")
DB_projet_full <- allgre.PB_V2
n_rows <- nrow(DB_projet_full)
n_cols <- ncol(DB_projet_full)
n_personnes <- nrow(table(DB_projet_full$id_pers))
n_trips <- nrow(table(DB_projet_full$id_depl))
n_mng <- nrow(table(DB_projet_full$id_men))
n_missing <- sum(is.na(DB_projet_full))
n_values <- n_rows * n_cols
cat("Nombre d'observations :", n_rows, "\n")
cat("Nombre de variables :", n_cols, "\n")
cat("Nombre de personnes :", n_personnes, "\n")
cat("Nombre de trajets :", n_trips, "\n")
cat("Nombre de ménages :", n_mng, "\n")
cat("Nombre de valeurs manquantes :", n_missing, "\n")
cat("Proportion de valeurs manquantes :", round(n_missing/n_values, 4)*100, "% \n")
load("allgre.PB_V2.RData")
DB_projet_full <- allgre.PB_V2
n_rows <- nrow(DB_projet_full)
n_cols <- ncol(DB_projet_full)
n_personnes <- nrow(table(DB_projet_full$id_pers))
n_trips <- nrow(table(DB_projet_full$id_depl))
n_mng <- nrow(table(DB_projet_full$id_men))
n_missing <- sum(is.na(DB_projet_full))
n_cols_without_na <- ncol(DB_projet_full[!apply(DB_projet_full, 2, anyNA)])
cat("Nombre d'observations :", n_rows, "\n")
cat("Nombre de variables :", n_cols, "\n")
cat("Nombre de personnes :", n_personnes, "\n")
cat("Nombre de trajets :", n_trips, "\n")
cat("Nombre de ménages :", n_mng, "\n")
cat("Nombre de valeurs manquantes :", n_missing, "\n")
cat("Proportion de valeurs manquantes :", round(n_missing/(n_rows * n_cols), 4)*100, "% \n")
cat("Nombre de variables sans valeurs manquantes :", n_cols_without_na, "\n")
load("allgre.PB_V2.RData")
DB_projet_full <- allgre.PB_V2
n_rows <- nrow(DB_projet_full)
n_cols <- ncol(DB_projet_full)
n_personnes <- nrow(table(DB_projet_full$id_pers))
n_trips <- nrow(table(DB_projet_full$id_depl))
n_mng <- nrow(table(DB_projet_full$id_men))
n_missing <- sum(is.na(DB_projet_full))
n_cols_without_na <- ncol(DB_projet_full[!apply(DB_projet_full, 2, anyNA)])
cat("Nombre d'observations :", n_rows, "\n")
cat("Nombre de variables :", n_cols, "\n")
cat("Nombre de personnes :", n_personnes, "\n")
cat("Nombre de trajets :", n_trips, "\n")
cat("Nombre de ménages :", n_mng, "\n")
cat("Nombre de valeurs manquantes :", n_missing, "\n")
cat("Proportion de valeurs manquantes :", round(n_missing/(n_rows * n_cols), 4)*100, "% \n")
cat("Nombre de variables sans valeurs manquantes :", n_cols_without_na, "\n")
cat("Proportion de variables sans valeurs manquantes :", round(n_cols_without_na/n_cols, 4)*100, "% \n")
summary_table <- data.frame(
Statistique = c("Nombre d'observations", "Nombre de variables", "Nombre de personnes", "Nombre de trajets", "Nombre de ménages", "Nombre de valeurs manquantes", "Proportion de valeurs manquantes", "Proportion de variables sans valeurs manquantes"),
Valeur = c(n_rows, n_cols, n_personnes, n_trips, n_mng, n_missing, paste0(round(n_missing/(n_rows * n_cols), 4)*100, "%"), paste0(round(n_cols_without_na/n_cols, 4)*100, "%"))
)
summary_table <- data.frame(
Statistique = c("Nombre d'observations", "Nombre de variables", "Nombre de personnes", "Nombre de trajets", "Nombre de ménages", "Nombre de valeurs manquantes", "Proportion de valeurs manquantes", "Proportion de variables sans valeurs manquantes"),
Valeur = c(n_rows, n_cols, n_personnes, n_trips, n_mng, n_missing, paste0(round(n_missing/(n_rows * n_cols), 4)*100, "%"), paste0(round(n_cols_without_na/n_cols, 4)*100, "%"))
)
summary_table
View(summary_table)
summary_table <- data.frame(
Statistique = c("Nombre d'observations", "Nombre de variables", "Nombre de personnes", "Nombre de trajets", "Nombre de ménages", "Nombre de valeurs manquantes", "Proportion de valeurs manquantes", "Proportion de variables sans valeurs manquantes"),
Valeur = c(n_rows, n_cols, n_personnes, n_trips, n_mng, n_missing, paste0(round(n_missing/(n_rows * n_cols), 4)*100, "%"), paste0(round(n_cols_without_na/n_cols, 4)*100, "%"))
)
print(summary_table)
summary_table <- data.frame(
Statistique = c("Nombre d'observations", "Nombre de variables", "Nombre de personnes", "Nombre de trajets", "Nombre de ménages", "Nombre de valeurs manquantes", "Proportion de valeurs manquantes", "Proportion de variables sans valeurs manquantes"),
Valeur = c(n_rows, n_cols, n_personnes, n_trips, n_mng, n_missing, paste0(round(n_missing/(n_rows * n_cols), 4)*100, "%"), paste0(round(n_cols_without_na/n_cols, 4)*100, "%"))
)
table(summary_table)
summary_table <- data.frame(
Statistique = c("Nombre d'observations", "Nombre de variables", "Nombre de personnes", "Nombre de trajets", "Nombre de ménages", "Nombre de valeurs manquantes", "Proportion de valeurs manquantes", "Proportion de variables sans valeurs manquantes"),
Valeur = c(n_rows, n_cols, n_personnes, n_trips, n_mng, n_missing, paste0(round(n_missing/(n_rows * n_cols), 4)*100, "%"), paste0(round(n_cols_without_na/n_cols, 4)*100, "%"))
)
summary(summary_table)
summary_table <- data.frame(
Statistique = c("Nombre d'observations", "Nombre de variables", "Nombre de personnes", "Nombre de trajets", "Nombre de ménages", "Nombre de valeurs manquantes", "Proportion de valeurs manquantes", "Proportion de variables sans valeurs manquantes"),
Valeur = c(n_rows, n_cols, n_personnes, n_trips, n_mng, n_missing, paste0(round(n_missing/(n_rows * n_cols), 4)*100, "%"), paste0(round(n_cols_without_na/n_cols, 4)*100, "%"))
)
head(summary_table)
load("allgre.PB_V2.RData")
DB_projet_full <- allgre.PB_V2
n_rows <- nrow(DB_projet_full)
n_cols <- ncol(DB_projet_full)
n_personnes <- nrow(table(DB_projet_full$id_pers))
n_trips <- nrow(table(DB_projet_full$id_depl))
n_mng <- nrow(table(DB_projet_full$id_men))
n_missing <- sum(is.na(DB_projet_full))
n_cols_without_na <- ncol(DB_projet_full[!apply(DB_projet_full, 2, anyNA)])
cat("Nombre d'observations :", n_rows, "\n")
cat("Nombre de variables :", n_cols, "\n")
cat("Nombre de personnes :", n_personnes, "\n")
cat("Nombre de trajets :", n_trips, "\n")
cat("Nombre de ménages :", n_mng, "\n")
cat("Nombre de valeurs manquantes :", n_missing, "\n")
cat("Proportion de valeurs manquantes :", round(n_missing/(n_rows * n_cols), 4)*100, "% \n")
cat("Proportion de variables sans valeurs manquantes :", round(n_cols_without_na/n_cols, 4)*100, "% \n")
ata_2<-DB_projet_full[,c(30:44)]
vis_miss(
data_2,
cluster = FALSE,
sort_miss = FALSE,
show_perc = TRUE,
show_perc_col = TRUE,
large_data_size = 9e+06,
warn_large_data = TRUE
)
data_2<-DB_projet_full[,c(22:30)]
vis_miss(
data_2,
cluster = FALSE,
sort_miss = FALSE,
show_perc = TRUE,
show_perc_col = TRUE,
large_data_size = 9e+06,
warn_large_data = TRUE
)
data_2<-DB_projet_full[,c(30:44)]
vis_miss(
data_2,
cluster = FALSE,
sort_miss = FALSE,
show_perc = TRUE,
show_perc_col = TRUE,
large_data_size = 9e+06,
warn_large_data = TRUE
)
data_2<-DB_projet_full[,c(30:44)]
vis_miss(
data_2,
cluster = FALSE,
sort_miss = FALSE,
show_perc = TRUE,
show_perc_col = TRUE,
large_data_size = 9e+06,
warn_large_data = TRUE
)
knitr::opts_chunk$set(echo= FALSE, include= TRUE, warning = FALSE)
# Liste des packages à installer et à charger
packages <- c("ggplot2", "factoextra", "FactoMineR", "cluster", "naniar", "corrplot" ,"dplyr", "rmdformats")
# Installez les packages qui ne sont pas déjà installés
new_packages <- packages[!packages %in% installed.packages()[,"Package"]]
if(length(new_packages)) install.packages(new_packages)
for(package in packages) {
library(package, character.only = TRUE)
}
load("allgre.PB_V2.RData")
DB_projet_full <- allgre.PB_V2
n_rows <- nrow(DB_projet_full)
n_cols <- ncol(DB_projet_full)
n_personnes <- nrow(table(DB_projet_full$id_pers))
n_trips <- nrow(table(DB_projet_full$id_depl))
n_mng <- nrow(table(DB_projet_full$id_men))
n_missing <- sum(is.na(DB_projet_full))
n_cols_without_na <- ncol(DB_projet_full[!apply(DB_projet_full, 2, anyNA)])
cat("Nombre d'observations :", n_rows, "\n")
cat("Nombre de variables :", n_cols, "\n")
cat("Nombre de personnes :", n_personnes, "\n")
cat("Nombre de trajets :", n_trips, "\n")
cat("Nombre de ménages :", n_mng, "\n")
cat("Nombre de valeurs manquantes :", n_missing, "\n")
cat("Proportion de valeurs manquantes :", round(n_missing/(n_rows * n_cols), 4)*100, "% \n")
cat("Proportion de variables sans valeurs manquantes :", round(n_cols_without_na/n_cols, 4)*100, "% \n")
data_2<-DB_projet_full[,c(30:44)]
vis_miss(
data_2,
cluster = FALSE,
sort_miss = FALSE,
show_perc = TRUE,
show_perc_col = TRUE,
large_data_size = 9e+06,
warn_large_data = TRUE
)
rm(list = ls())  # This will remove all objects from the current workspace
gc()             # This will trigger garbage collection, which can free up memory
knitr::opts_chunk$set(echo= FALSE, include= TRUE, warning = FALSE)
# Liste des packages à installer et à charger
packages <- c("ggplot2", "factoextra", "FactoMineR", "cluster", "naniar", "corrplot" ,"dplyr", "rmdformats")
# Installez les packages qui ne sont pas déjà installés
new_packages <- packages[!packages %in% installed.packages()[,"Package"]]
if(length(new_packages)) install.packages(new_packages)
for(package in packages) {
library(package, character.only = TRUE)
}
load("allgre.PB_V2.RData")
DB_projet_full <- allgre.PB_V2
n_rows <- nrow(DB_projet_full)
n_cols <- ncol(DB_projet_full)
n_personnes <- nrow(table(DB_projet_full$id_pers))
n_trips <- nrow(table(DB_projet_full$id_depl))
n_mng <- nrow(table(DB_projet_full$id_men))
n_missing <- sum(is.na(DB_projet_full))
n_cols_without_na <- ncol(DB_projet_full[!apply(DB_projet_full, 2, anyNA)])
cat("Nombre d'observations :", n_rows, "\n")
cat("Nombre de variables :", n_cols, "\n")
cat("Nombre de personnes :", n_personnes, "\n")
cat("Nombre de trajets :", n_trips, "\n")
cat("Nombre de ménages :", n_mng, "\n")
cat("Nombre de valeurs manquantes :", n_missing, "\n")
cat("Proportion de valeurs manquantes :", round(n_missing/(n_rows * n_cols), 4)*100, "% \n")
cat("Proportion de variables sans valeurs manquantes :", round(n_cols_without_na/n_cols, 4)*100, "% \n")
data_2<-DB_projet_full[,c(30:44)]
vis_miss(
data_2,
cluster = FALSE,
sort_miss = FALSE,
show_perc = TRUE,
show_perc_col = TRUE,
large_data_size = 9e+06,
warn_large_data = TRUE
)
knitr::opts_chunk$set(ehco= FALSE, include= TRUE, warning = FALSE)
pacman::p_load(naniar)
library(dplyr)
load("allgre.PB_V2.RData")
DB_projet_full<-allgre.PB_V2
dim(DB_projet_full) #nombre de lignes et de colonnes de la base de données
#pacmann::
glimpse(DB_projet_full)  #a
sum(is.na(DB_projet_full))
pct_complete(DB_projet_full) #
pct_miss(DB_projet_full)
pct_complete_var(DB_projet_full) #% de colonnes complètes ~21%
pct_complete_case(DB_projet_full) # % de lignes complètes 0%
#summary(DB_projet_full) Le summary n'a pas de sens avec autant de colonnes
library(cluster)
library(factoextra)
library(FactoMineR)
library(ggplot2)
library(naniar)
dim(DB_projet_full)[1]
sapply(DB_projet_full,function(x) (sum(is.na(x))/30702)*100)
#gg_miss_var(DB_projet_full[,c(1:6)])
#gg_miss_var(DB_projet_full,show_pct=TRUE)
#gg_miss_var(DB_projet_full,Gare2,show_pct = TRUE)
#print(test)
#miss_var_summary(DB_projet_full,order=FALSE,add_cumsum = TRUE)
#hist(Count_NA_VAR)
sample <- sample(c(TRUE,FALSE),size=nrow(DB_projet_full),replace=TRUE,prob=c(0.7,0.3))
DB_BBB <-DB_projet_full[!sample,]
DB_BBB$freqtcu2<-DB_BBB$freqtcu
library(dplyr)
#Code de test à éliminer par la suite
set.seed(1) # Cela fige
sample <- sample(c(TRUE,FALSE),size=nrow(DB_projet_full),replace=TRUE,prob=c(0.7,0.3))
DB_reduced <-DB_projet_full[!sample,] #base de donnée test , plus petite pour faire des opérations dessus (j'ai pris 30%)
DB_reduced$freqtcu2<-DB_reduced$freqtcu
DB_reduced<-DB_reduced%>%mutate(freqtcu=ifelse(freqtcu<=3,1,0)) #On simplifie notre variable explicative en disant que ceux qui l"utilise tous les jours (freqtcu=1) , 2 fois par semaine minimum ( freqtcu=2) et 2 fois par mois minimum ( freqtcu=3)
#table(DB_reduced$freqtcu)
DB_reduced$freqtcu<-factor(DB_reduced$freqtcu) #transformation de la variable Y en facteur pour ensuite l'utiliser dans un modèle
#str(DB_reduced[,c(67:70)])
#DB_reduced<-rename(DB_reduced,"tailmng"="NO_PERS")
#DB_reduced_2<-DB_reduced[!duplicated(DB_reduced$id_pers),]  #5249 gens recencés dans le sondage mais on a besoin des infos relatives aux trajets justement donc
#Permis
DB_reduced<-DB_reduced%>%mutate(permis=ifelse(permis==1 | permis==3,"YES","NO")) #On dit que ceux qui passent le permis vont avoir le permis
#Car ownership
DB_reduced$car_ownership<-c(1:nrow(DB_reduced)) # création de la variable  ###
#DB_reduced$car_ownership<-DB_reduced%>%
#mutate(car_ownership=ifelse(DB_reduced$VP_DISPO>=1 & (DB_reduced$GENRE1==1 | DB_reduced$GENRE2==1 | DB_reduced$GENRE3==1 | #DB_reduced$GENRE4==1) & (DB_reduced$POSSES1==1 | DB_reduced$POSSES2==1 | DB_reduced$POSSES3==1 | DB_reduced$POSSES4==1 ),"OUI","NON"))
DB_reduced<-DB_reduced%>%mutate(car_ownership=ifelse(DB_reduced$VP_DISPO>0 & (DB_reduced$GENRE1!=2 | DB_reduced$GENRE2!=2 | DB_reduced$GENRE3!=2 | DB_reduced$GENRE4!=2) & (DB_reduced$POSSES1==1 | DB_reduced$POSSES2==1 | DB_reduced$POSSES3==1 | DB_reduced$POSSES4==1),"OUI","NON"))
DB_reduced$car_ownership<-factor(DB_reduced$car_ownership)
str(DB_reduced[,c(116,117)])
#DB_reduced$car_ownership_2<-c(1,nrow(DB_reduced))
DB_reduced$car_ownership_2<-ifelse(DB_reduced$dispovp==1 | DB_reduced$dispovp==2,"OUI","NON")
table(DB_reduced$car_ownership_2)
DB_projet_full$freqtcu2<-DB_projet_full$freqtcu
DB_projet_full<-DB_projet_full%>%mutate(freqtcu=ifelse(freqtcu<=3,1,0))
DB_projet_full$freqtcu<-factor(DB_projet_full$freqtcu)
DB_projet_full<-rename(DB_projet_full,"tailmng"="NO_PERS")
DB_projet_full<-DB_projet_full%>%mutate(permis=ifelse(any(permis==1 | permis==3),"YES","NO"))
DB_projet_full$permis<-factor(DB_projet_full$permis)
#DB_projet_full<-DB_projet_full%>%mutate(car_ownership=ifelse(DB_projet_full$VP_DISPO>0 & (DB_projet_full$GENRE1!=2 | #DB_projet_full$GENRE2!=2 | DB_projet_full$GENRE3!=2 | DB_projet_full$GENRE4!=2) & (DB_projet_full$POSSES1==1 | #DB_projet_full$POSSES2==1 | DB_projet_full$POSSES3==1 | DB_projet_full$POSSES4==1),"OUI","NON"))
#DB_projet_full$car_ownership<-factor(DB_projet_full$car_ownership)
DB_projet_full<-DB_projet_full%>%mutate(car_ownership=ifelse(DB_projet_full$dispovp==1 | DB_projet_full$dispovp==2,"OUI","NON"))
DB_projet_full$car_ownership<-factor(DB_projet_full$car_ownership)
#table(DB_reduced$car_ownership_2)
# Variables liées au confort
Variables_supp<-c(1,2,6,7,8,20,21,47,49,53,54,55,56,57,59,60,61,62,63,76,87,88,89,91,102,107,108,109,112,113,115,117) #c'est là qu'on va ajouter nos variables
str(DB_reduced[,Variables_supp])
New_DB<-cbind(DB_projet_full[,Variables_supp],DB_projet_full$freqtcu,DB_projet_full$permis,DB_projet_full$tailmng,DB_projet_full$car_ownership) #création de la nouvelles bases de données
New_DB<-rename(New_DB,"freqtcu"="DB_projet_full$freqtcu")
New_DB<-rename(New_DB,"permis"="DB_projet_full$permis")
New_DB<-rename(New_DB,"tailmng"="DB_projet_full$tailmng")
New_DB<-rename(New_DB,"car_ownership"="DB_projet_full$car_ownership")
New_DB<-rename(New_DB,"PBM_STAT_GENERAL"="PBM_STAT")
New_DB$TYPE_HAB<-replace(New_DB$TYPE_HAB,New_DB$TYPE_HAB==1,"INDIVIDUEL_ISO")
New_DB$TYPE_HAB<-replace(New_DB$TYPE_HAB,New_DB$TYPE_HAB==2,"INDIVIDUEL_COLE")
New_DB$TYPE_HAB<-replace(New_DB$TYPE_HAB,New_DB$TYPE_HAB==3,"PETIT_COLLECTIF")
New_DB$TYPE_HAB<-replace(New_DB$TYPE_HAB,New_DB$TYPE_HAB==4,"GRAND_COLLECTIF")
New_DB$TYPE_HAB<-replace(New_DB$TYPE_HAB,New_DB$TYPE_HAB==5,"AUTRE")
New_DB$TYPE_HAB<-factor(New_DB$TYPE_HAB)
New_DB$TYPE_OCU<-replace(New_DB$TYPE_OCU,New_DB$TYPE_OCU==1,"PROPRIETAIRE")
New_DB$TYPE_OCU<-replace(New_DB$TYPE_OCU,New_DB$TYPE_OCU==2,"LOCATAIRE_HLM")
New_DB$TYPE_OCU<-replace(New_DB$TYPE_OCU,New_DB$TYPE_OCU==3,"AUTRE_LOCATAIRE")
New_DB$TYPE_OCU<-replace(New_DB$TYPE_OCU,New_DB$TYPE_OCU==4,"LOGE_GRATUIT")
New_DB$TYPE_OCU<-replace(New_DB$TYPE_OCU,New_DB$TYPE_OCU==5,"AUTRE")
New_DB$TYPE_OCU<-factor(New_DB$TYPE_OCU)
New_DB$jourdepl<-replace(New_DB$jourdepl,New_DB$jourdepl==1,"LUNDI")
New_DB$jourdepl<-replace(New_DB$jourdepl,New_DB$jourdepl==2,"MARDI")
New_DB$jourdepl<-replace(New_DB$jourdepl,New_DB$jourdepl==3,"MERCREDI")
New_DB$jourdepl<-replace(New_DB$jourdepl,New_DB$jourdepl==4,"JEUDI")
New_DB$jourdepl<-replace(New_DB$jourdepl,New_DB$jourdepl==5,"VENDREDI")
New_DB$jourdepl<-factor(New_DB$jourdepl)
New_DB<-New_DB%>%mutate(LIEU_STAT1=ifelse(is.na(LIEU_STAT1),0,LIEU_STAT1))
New_DB$LIEU_STAT1<-replace(New_DB$LIEU_STAT1,New_DB$LIEU_STAT1==1,"GARAGE/BOX")
New_DB$LIEU_STAT1<-replace(New_DB$LIEU_STAT1,New_DB$LIEU_STAT1==2,"RUE")
New_DB$LIEU_STAT1<-replace(New_DB$LIEU_STAT1,New_DB$LIEU_STAT1==3,"PARKING PUBLIC")
New_DB$LIEU_STAT1<-replace(New_DB$LIEU_STAT1,New_DB$LIEU_STAT1==4,"PARKING PRIVÉ")
New_DB$LIEU_STAT1<-replace(New_DB$LIEU_STAT1,New_DB$LIEU_STAT1==0,"PAS_INFO") #traitement des valeurs manquantes
knitr::opts_chunk$set(ehco= FALSE, include= TRUE, warning = FALSE)
pacman::p_load(naniar)
library(dplyr)
load("allgre.PB_V2.RData")
DB_projet_full<-allgre.PB_V2
dim(DB_projet_full) #nombre de lignes et de colonnes de la base de données
#pacmann::
glimpse(DB_projet_full)  #a
sum(is.na(DB_projet_full))
pct_complete(DB_projet_full) #
pct_miss(DB_projet_full)
pct_complete_var(DB_projet_full) #% de colonnes complètes ~21%
pct_complete_case(DB_projet_full) # % de lignes complètes 0%
#summary(DB_projet_full) Le summary n'a pas de sens avec autant de colonnes
library(cluster)
library(factoextra)
library(FactoMineR)
library(ggplot2)
library(naniar)
dim(DB_projet_full)[1]
sapply(DB_projet_full,function(x) (sum(is.na(x))/30702)*100)
#gg_miss_var(DB_projet_full[,c(1:6)])
#gg_miss_var(DB_projet_full,show_pct=TRUE)
#gg_miss_var(DB_projet_full,Gare2,show_pct = TRUE)
#print(test)
#miss_var_summary(DB_projet_full,order=FALSE,add_cumsum = TRUE)
#hist(Count_NA_VAR)
sample <- sample(c(TRUE,FALSE),size=nrow(DB_projet_full),replace=TRUE,prob=c(0.7,0.3))
DB_BBB <-DB_projet_full[!sample,]
DB_BBB$freqtcu2<-DB_BBB$freqtcu
library(dplyr)
#Code de test à éliminer par la suite
set.seed(1) # Cela fige
sample <- sample(c(TRUE,FALSE),size=nrow(DB_projet_full),replace=TRUE,prob=c(0.7,0.3))
DB_reduced <-DB_projet_full[!sample,] #base de donnée test , plus petite pour faire des opérations dessus (j'ai pris 30%)
DB_reduced$freqtcu2<-DB_reduced$freqtcu
DB_reduced<-DB_reduced%>%mutate(freqtcu=ifelse(freqtcu<=3,1,0)) #On simplifie notre variable explicative en disant que ceux qui l"utilise tous les jours (freqtcu=1) , 2 fois par semaine minimum ( freqtcu=2) et 2 fois par mois minimum ( freqtcu=3)
#table(DB_reduced$freqtcu)
DB_reduced$freqtcu<-factor(DB_reduced$freqtcu) #transformation de la variable Y en facteur pour ensuite l'utiliser dans un modèle
#str(DB_reduced[,c(67:70)])
#DB_reduced<-rename(DB_reduced,"tailmng"="NO_PERS")
#DB_reduced_2<-DB_reduced[!duplicated(DB_reduced$id_pers),]  #5249 gens recencés dans le sondage mais on a besoin des infos relatives aux trajets justement donc
#Permis
DB_reduced<-DB_reduced%>%mutate(permis=ifelse(permis==1 | permis==3,"YES","NO")) #On dit que ceux qui passent le permis vont avoir le permis
#Car ownership
DB_reduced$car_ownership<-c(1:nrow(DB_reduced)) # création de la variable  ###
#DB_reduced$car_ownership<-DB_reduced%>%
#mutate(car_ownership=ifelse(DB_reduced$VP_DISPO>=1 & (DB_reduced$GENRE1==1 | DB_reduced$GENRE2==1 | DB_reduced$GENRE3==1 | #DB_reduced$GENRE4==1) & (DB_reduced$POSSES1==1 | DB_reduced$POSSES2==1 | DB_reduced$POSSES3==1 | DB_reduced$POSSES4==1 ),"OUI","NON"))
DB_reduced<-DB_reduced%>%mutate(car_ownership=ifelse(DB_reduced$VP_DISPO>0 & (DB_reduced$GENRE1!=2 | DB_reduced$GENRE2!=2 | DB_reduced$GENRE3!=2 | DB_reduced$GENRE4!=2) & (DB_reduced$POSSES1==1 | DB_reduced$POSSES2==1 | DB_reduced$POSSES3==1 | DB_reduced$POSSES4==1),"OUI","NON"))
DB_reduced$car_ownership<-factor(DB_reduced$car_ownership)
str(DB_reduced[,c(116,117)])
#DB_reduced$car_ownership_2<-c(1,nrow(DB_reduced))
DB_reduced$car_ownership_2<-ifelse(DB_reduced$dispovp==1 | DB_reduced$dispovp==2,"OUI","NON")
table(DB_reduced$car_ownership_2)
DB_projet_full$freqtcu2<-DB_projet_full$freqtcu
DB_projet_full<-DB_projet_full%>%mutate(freqtcu=ifelse(freqtcu<=3,1,0))
DB_projet_full$freqtcu<-factor(DB_projet_full$freqtcu)
DB_projet_full<-rename(DB_projet_full,"tailmng"="NO_PERS")
DB_projet_full<-DB_projet_full%>%mutate(permis=ifelse(any(permis==1 | permis==3),"YES","NO"))
DB_projet_full$permis<-factor(DB_projet_full$permis)
#DB_projet_full<-DB_projet_full%>%mutate(car_ownership=ifelse(DB_projet_full$VP_DISPO>0 & (DB_projet_full$GENRE1!=2 | #DB_projet_full$GENRE2!=2 | DB_projet_full$GENRE3!=2 | DB_projet_full$GENRE4!=2) & (DB_projet_full$POSSES1==1 | #DB_projet_full$POSSES2==1 | DB_projet_full$POSSES3==1 | DB_projet_full$POSSES4==1),"OUI","NON"))
#DB_projet_full$car_ownership<-factor(DB_projet_full$car_ownership)
DB_projet_full<-DB_projet_full%>%mutate(car_ownership=ifelse(DB_projet_full$dispovp==1 | DB_projet_full$dispovp==2,"OUI","NON"))
DB_projet_full$car_ownership<-factor(DB_projet_full$car_ownership)
#table(DB_reduced$car_ownership_2)
# Variables liées au confort
Variables_supp<-c(1,2,6,7,8,20,21,47,49,53,54,55,56,57,59,60,61,62,63,76,87,88,89,91,102,107,108,109,112,113,115,117) #c'est là qu'on va ajouter nos variables
str(DB_reduced[,Variables_supp])
New_DB<-cbind(DB_projet_full[,Variables_supp],DB_projet_full$freqtcu,DB_projet_full$permis,DB_projet_full$tailmng,DB_projet_full$car_ownership) #création de la nouvelles bases de données
New_DB<-rename(New_DB,"freqtcu"="DB_projet_full$freqtcu")
New_DB<-rename(New_DB,"permis"="DB_projet_full$permis")
New_DB<-rename(New_DB,"tailmng"="DB_projet_full$tailmng")
New_DB<-rename(New_DB,"car_ownership"="DB_projet_full$car_ownership")
New_DB<-rename(New_DB,"PBM_STAT_GENERAL"="PBM_STAT")
New_DB$TYPE_HAB<-replace(New_DB$TYPE_HAB,New_DB$TYPE_HAB==1,"INDIVIDUEL_ISO")
New_DB$TYPE_HAB<-replace(New_DB$TYPE_HAB,New_DB$TYPE_HAB==2,"INDIVIDUEL_COLE")
New_DB$TYPE_HAB<-replace(New_DB$TYPE_HAB,New_DB$TYPE_HAB==3,"PETIT_COLLECTIF")
New_DB$TYPE_HAB<-replace(New_DB$TYPE_HAB,New_DB$TYPE_HAB==4,"GRAND_COLLECTIF")
New_DB$TYPE_HAB<-replace(New_DB$TYPE_HAB,New_DB$TYPE_HAB==5,"AUTRE")
New_DB$TYPE_HAB<-factor(New_DB$TYPE_HAB)
New_DB$TYPE_OCU<-replace(New_DB$TYPE_OCU,New_DB$TYPE_OCU==1,"PROPRIETAIRE")
New_DB$TYPE_OCU<-replace(New_DB$TYPE_OCU,New_DB$TYPE_OCU==2,"LOCATAIRE_HLM")
New_DB$TYPE_OCU<-replace(New_DB$TYPE_OCU,New_DB$TYPE_OCU==3,"AUTRE_LOCATAIRE")
New_DB$TYPE_OCU<-replace(New_DB$TYPE_OCU,New_DB$TYPE_OCU==4,"LOGE_GRATUIT")
New_DB$TYPE_OCU<-replace(New_DB$TYPE_OCU,New_DB$TYPE_OCU==5,"AUTRE")
New_DB$TYPE_OCU<-factor(New_DB$TYPE_OCU)
New_DB$jourdepl<-replace(New_DB$jourdepl,New_DB$jourdepl==1,"LUNDI")
New_DB$jourdepl<-replace(New_DB$jourdepl,New_DB$jourdepl==2,"MARDI")
New_DB$jourdepl<-replace(New_DB$jourdepl,New_DB$jourdepl==3,"MERCREDI")
New_DB$jourdepl<-replace(New_DB$jourdepl,New_DB$jourdepl==4,"JEUDI")
New_DB$jourdepl<-replace(New_DB$jourdepl,New_DB$jourdepl==5,"VENDREDI")
New_DB$jourdepl<-factor(New_DB$jourdepl)
New_DB<-New_DB%>%mutate(LIEU_STAT1=ifelse(is.na(LIEU_STAT1),0,LIEU_STAT1))
New_DB$LIEU_STAT1<-replace(New_DB$LIEU_STAT1,New_DB$LIEU_STAT1==1,"GARAGE/BOX")
New_DB$LIEU_STAT1<-replace(New_DB$LIEU_STAT1,New_DB$LIEU_STAT1==2,"RUE")
New_DB$LIEU_STAT1<-replace(New_DB$LIEU_STAT1,New_DB$LIEU_STAT1==3,"PARKING PUBLIC")
New_DB$LIEU_STAT1<-replace(New_DB$LIEU_STAT1,New_DB$LIEU_STAT1==4,"PARKING PRIVÉ")
New_DB$LIEU_STAT1<-replace(New_DB$LIEU_STAT1,New_DB$LIEU_STAT1==0,"PAS_INFO") #traitement des valeurs manquantes
