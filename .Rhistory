DB_reduced$freqtcu2<-DB_reduced$freqtcu
DB_reduced<-DB_reduced%>%mutate(freqtcu=ifelse(freqtcu<=3,1,0)) #On simplifie notre variable explicative en disant que ceux qui l"utilise tous les jours (freqtcu=1) , 2 fois par semaine minimum ( freqtcu=2) et 2 fois par mois minimum ( freqtcu=3)
#table(DB_reduced$freqtcu)
DB_reduced$freqtcu<-factor(DB_reduced$freqtcu) #transformation de la variable Y en facteur pour ensuite l'utiliser dans un modèle
#str(DB_reduced[,c(67:70)])
#DB_reduced<-rename(DB_reduced,"tailmng"="NO_PERS")
#DB_reduced_2<-DB_reduced[!duplicated(DB_reduced$id_pers),]  #5249 gens recencés dans le sondage mais on a besoin des infos relatives aux trajets justement donc
#Permis
DB_reduced<-DB_reduced%>%mutate(permis=ifelse(permis==1 | permis==3,"YES","NO")) #On dit que ceux qui passent le permis vont avoir le permis
#Car ownership
DB_reduced$car_ownership<-c(1:nrow(DB_reduced)) # création de la variable  ###
#DB_reduced$car_ownership<-DB_reduced%>%
#mutate(car_ownership=ifelse(DB_reduced$VP_DISPO>=1 & (DB_reduced$GENRE1==1 | DB_reduced$GENRE2==1 | DB_reduced$GENRE3==1 | #DB_reduced$GENRE4==1) & (DB_reduced$POSSES1==1 | DB_reduced$POSSES2==1 | DB_reduced$POSSES3==1 | DB_reduced$POSSES4==1 ),"OUI","NON"))
DB_reduced<-DB_reduced%>%mutate(car_ownership=ifelse(DB_reduced$VP_DISPO>0 & (DB_reduced$GENRE1!=2 | DB_reduced$GENRE2!=2 | DB_reduced$GENRE3!=2 | DB_reduced$GENRE4!=2) & (DB_reduced$POSSES1==1 | DB_reduced$POSSES2==1 | DB_reduced$POSSES3==1 | DB_reduced$POSSES4==1),"OUI","NON"))
DB_reduced$car_ownership<-factor(DB_reduced$car_ownership)
str(DB_reduced[,c(116,117)])
#DB_reduced$car_ownership_2<-c(1,nrow(DB_reduced))
DB_reduced$car_ownership_2<-ifelse(DB_reduced$dispovp==1 | DB_reduced$dispovp==2,"OUI","NON")
table(DB_reduced$car_ownership_2)
DB_projet_full$freqtcu2<-DB_projet_full$freqtcu
DB_projet_full<-DB_projet_full%>%mutate(freqtcu=ifelse(freqtcu<=3,1,0))
DB_projet_full$freqtcu<-factor(DB_projet_full$freqtcu)
DB_projet_full<-rename(DB_projet_full,"tailmng"="NO_PERS")
DB_projet_full<-DB_projet_full%>%mutate(permis=ifelse(any(permis==1 | permis==3),"YES","NO"))
DB_projet_full$permis<-factor(DB_projet_full$permis)
#DB_projet_full<-DB_projet_full%>%mutate(car_ownership=ifelse(DB_projet_full$VP_DISPO>0 & (DB_projet_full$GENRE1!=2 | #DB_projet_full$GENRE2!=2 | DB_projet_full$GENRE3!=2 | DB_projet_full$GENRE4!=2) & (DB_projet_full$POSSES1==1 | #DB_projet_full$POSSES2==1 | DB_projet_full$POSSES3==1 | DB_projet_full$POSSES4==1),"OUI","NON"))
#DB_projet_full$car_ownership<-factor(DB_projet_full$car_ownership)
DB_projet_full<-DB_projet_full%>%mutate(car_ownership=ifelse(DB_projet_full$dispovp==1 | DB_projet_full$dispovp==2,"OUI","NON"))
DB_projet_full$car_ownership<-factor(DB_projet_full$car_ownership)
#table(DB_reduced$car_ownership_2)
# Variables liées au confort
Variables_supp<-c(1,2,6,7,8,20,21,47,49,53,54,55,56,57,59,60,61,62,63,76,87,88,89,91,102,107,108,109,112,113,115,117) #c'est là qu'on va ajouter nos variables
str(DB_reduced[,Variables_supp])
New_DB<-cbind(DB_projet_full[,Variables_supp],DB_projet_full$freqtcu,DB_projet_full$permis,DB_projet_full$tailmng,DB_projet_full$car_ownership) #création de la nouvelles bases de données
New_DB<-rename(New_DB,"freqtcu"="DB_projet_full$freqtcu")
New_DB<-rename(New_DB,"permis"="DB_projet_full$permis")
New_DB<-rename(New_DB,"tailmng"="DB_projet_full$tailmng")
New_DB<-rename(New_DB,"car_ownership"="DB_projet_full$car_ownership")
New_DB<-rename(New_DB,"PBM_STAT_GENERAL"="PBM_STAT")
New_DB$TYPE_HAB<-replace(New_DB$TYPE_HAB,New_DB$TYPE_HAB==1,"INDIVIDUEL_ISO")
New_DB$TYPE_HAB<-replace(New_DB$TYPE_HAB,New_DB$TYPE_HAB==2,"INDIVIDUEL_COLE")
New_DB$TYPE_HAB<-replace(New_DB$TYPE_HAB,New_DB$TYPE_HAB==3,"PETIT_COLLECTIF")
New_DB$TYPE_HAB<-replace(New_DB$TYPE_HAB,New_DB$TYPE_HAB==4,"GRAND_COLLECTIF")
New_DB$TYPE_HAB<-replace(New_DB$TYPE_HAB,New_DB$TYPE_HAB==5,"AUTRE")
New_DB$TYPE_HAB<-factor(New_DB$TYPE_HAB)
New_DB$TYPE_OCU<-replace(New_DB$TYPE_OCU,New_DB$TYPE_OCU==1,"PROPRIETAIRE")
New_DB$TYPE_OCU<-replace(New_DB$TYPE_OCU,New_DB$TYPE_OCU==2,"LOCATAIRE_HLM")
New_DB$TYPE_OCU<-replace(New_DB$TYPE_OCU,New_DB$TYPE_OCU==3,"AUTRE_LOCATAIRE")
New_DB$TYPE_OCU<-replace(New_DB$TYPE_OCU,New_DB$TYPE_OCU==4,"LOGE_GRATUIT")
New_DB$TYPE_OCU<-replace(New_DB$TYPE_OCU,New_DB$TYPE_OCU==5,"AUTRE")
New_DB$TYPE_OCU<-factor(New_DB$TYPE_OCU)
New_DB$jourdepl<-replace(New_DB$jourdepl,New_DB$jourdepl==1,"LUNDI")
New_DB$jourdepl<-replace(New_DB$jourdepl,New_DB$jourdepl==2,"MARDI")
New_DB$jourdepl<-replace(New_DB$jourdepl,New_DB$jourdepl==3,"MERCREDI")
New_DB$jourdepl<-replace(New_DB$jourdepl,New_DB$jourdepl==4,"JEUDI")
New_DB$jourdepl<-replace(New_DB$jourdepl,New_DB$jourdepl==5,"VENDREDI")
New_DB$jourdepl<-factor(New_DB$jourdepl)
New_DB<-New_DB%>%mutate(LIEU_STAT1=ifelse(is.na(LIEU_STAT1),0,LIEU_STAT1))
New_DB$LIEU_STAT1<-replace(New_DB$LIEU_STAT1,New_DB$LIEU_STAT1==1,"GARAGE/BOX")
New_DB$LIEU_STAT1<-replace(New_DB$LIEU_STAT1,New_DB$LIEU_STAT1==2,"RUE")
New_DB$LIEU_STAT1<-replace(New_DB$LIEU_STAT1,New_DB$LIEU_STAT1==3,"PARKING PUBLIC")
New_DB$LIEU_STAT1<-replace(New_DB$LIEU_STAT1,New_DB$LIEU_STAT1==4,"PARKING PRIVÉ")
New_DB$LIEU_STAT1<-replace(New_DB$LIEU_STAT1,New_DB$LIEU_STAT1==0,"PAS_INFO") #traitement des valeurs manquantes
New_DB$LIEU_STAT1<-factor(New_DB$LIEU_STAT1)
New_DB<-New_DB%>%mutate(TYPE_STAT1=ifelse(is.na(TYPE_STAT1),0,TYPE_STAT1))
New_DB$TYPE_STAT1<-replace(New_DB$TYPE_STAT1,New_DB$TYPE_STAT1==1,"INTERDIT")
New_DB$TYPE_STAT1<-replace(New_DB$TYPE_STAT1,New_DB$TYPE_STAT1==2,"GRATUIT")
New_DB$TYPE_STAT1<-replace(New_DB$TYPE_STAT1,New_DB$TYPE_STAT1==3,"PAYANT")
New_DB$TYPE_STAT1<-replace(New_DB$TYPE_STAT1,New_DB$TYPE_STAT1==4,"PAYÉ_TIERCE")
New_DB$TYPE_STAT1<-replace(New_DB$TYPE_STAT1,New_DB$TYPE_STAT1==0,"PAS_INFO") #traitement des valeurs manquantes on aura besoin de ça après
New_DB$TYPE_STAT1<-factor(New_DB$TYPE_STAT1)
New_DB$sexe<-replace(New_DB$sexe,New_DB$sexe==1,"Homme")
New_DB$sexe<-replace(New_DB$sexe,New_DB$sexe==2,"Femme")
New_DB$sexe<-factor(New_DB$sexe)
New_DB$etabscol<-replace(New_DB$etabscol,New_DB$etabscol==2,"CAP")
New_DB$etabscol<-replace(New_DB$etabscol,New_DB$etabscol==3,"BEP")
New_DB$etabscol<-replace(New_DB$etabscol,New_DB$etabscol==4,"BAC")
New_DB$etabscol<-replace(New_DB$etabscol,New_DB$etabscol==5,"BAC+2")
New_DB$etabscol<-replace(New_DB$etabscol,New_DB$etabscol==6,"BAC >= 3")
New_DB$etabscol<-replace(New_DB$etabscol,New_DB$etabscol==7,"APPRENTISSAGE")
New_DB$etabscol<-replace(New_DB$etabscol,New_DB$etabscol==1,"PAS DIPLOME")
New_DB$etabscol<-factor(New_DB$etabscol)
New_DB$OCCU1 <- replace(New_DB$OCCU1, New_DB$OCCU1 == 1, "TravaiPleinT")
New_DB$OCCU1 <- replace(New_DB$OCCU1, New_DB$OCCU1 == 2, "TravailPartT")
New_DB$OCCU1 <- replace(New_DB$OCCU1, New_DB$OCCU1 == 3, "Appreti_Stage")
New_DB$OCCU1 <- replace(New_DB$OCCU1, New_DB$OCCU1 == 4, "Etudiant")
New_DB$OCCU1 <- replace(New_DB$OCCU1, New_DB$OCCU1 == 7, "Retraite")
New_DB$OCCU1 <- replace(New_DB$OCCU1, New_DB$OCCU1 == 5, "Scolaire")
New_DB$OCCU1 <- replace(New_DB$OCCU1, New_DB$OCCU1 == 6, "RSA")
New_DB$OCCU1 <- replace(New_DB$OCCU1, New_DB$OCCU1 == 8, "Reste_auFoyer")
New_DB$OCCU1 <- replace(New_DB$OCCU1, New_DB$OCCU1 == 9, "Autre")
New_DB$OCCU1=factor(New_DB$OCCU1)
New_DB$OCCU2 <- replace(New_DB$OCCU2, New_DB$OCCU2 == 0, "NON_Con")
New_DB$OCCU2 <- replace(New_DB$OCCU2, New_DB$OCCU2 == 1, "Travail")
New_DB$OCCU2 <- replace(New_DB$OCCU2, New_DB$OCCU2 == 2, "Etudes")
New_DB$OCCU2=factor(New_DB$OCCU2)
New_DB$csp<-replace(New_DB$csp,New_DB$csp==21 | New_DB$csp==22 | New_DB$csp==23 |New_DB$csp==31 | New_DB$csp==32 | New_DB$csp==36 | New_DB$csp==41 | New_DB$csp==46 | New_DB$csp==51 | New_DB$csp==54 | New_DB$csp==55,"HIGH_STATUT")
New_DB$csp<-replace(New_DB$csp,New_DB$csp==10 | New_DB$csp==47 | New_DB$csp==48 |New_DB$csp==56 | New_DB$csp==61| New_DB$csp==66 | New_DB$csp==69 |New_DB$csp==81 | New_DB$csp==82 | New_DB$csp==90,"LOW_STATUT")
New_DB$csp<-replace(New_DB$csp,New_DB$csp==83 | New_DB$csp==84 | New_DB$csp==85 | New_DB$csp==86 | New_DB$csp==87 | New_DB$csp==99 , "ETUDES")
New_DB$csp<-factor(New_DB$csp)
New_DB<-New_DB%>%mutate(ABO_TC=ifelse(is.na(ABO_TC),0,ABO_TC))
New_DB$ABO_TC<-replace(New_DB$ABO_TC,New_DB$ABO_TC==1,"OUI_GRATUIT")
New_DB$ABO_TC<-replace(New_DB$ABO_TC,New_DB$ABO_TC==2,"OUI_PAYANT")
New_DB$ABO_TC<-replace(New_DB$ABO_TC,New_DB$ABO_TC==3,"NON")
New_DB$ABO_TC<-replace(New_DB$ABO_TC,New_DB$ABO_TC==0,"PAS_INFO")
New_DB$ABO_TC<-factor(New_DB$ABO_TC)
New_DB<-New_DB%>%mutate(travdom=ifelse(is.na(travdom),0,travdom))
New_DB$travdom<-replace(New_DB$travdom,New_DB$travdom==1,"OUI")
New_DB$travdom<-replace(New_DB$travdom,New_DB$travdom==2,"NON")
New_DB$travdom<-replace(New_DB$travdom,New_DB$travdom==0,"PAS_INFO")
New_DB$travdom<-factor(New_DB$travdom)
New_DB<-New_DB%>%mutate(zonetrav=ifelse(is.na(zonetrav),0,zonetrav))
New_DB$zonetrav<-replace(New_DB$zonetrav,New_DB$zonetrav==0,"PAS_INFO")
#New_DB<-New_DB%>%mutate(zonetrav=case_when(zonetrav %in% c(100,114)~"CENTRE VILLE"))
New_DB$zonetrav<-replace(New_DB$zonetrav,New_DB$zonetrav %in% c(101001:114009),"CENTRE_VILLE")
New_DB$zonetrav<-replace(New_DB$zonetrav,New_DB$zonetrav %in% c(115001:143009),"AGGLO_PROCHE")
New_DB$zonetrav<-replace(New_DB$zonetrav,New_DB$zonetrav %in% c(201001:9039999),"HORS_GRENOBLE")
New_DB$zonetrav<-factor(New_DB$zonetrav)
New_DB<-New_DB%>%mutate(dispovp=ifelse(is.na(dispovp),0,dispovp))
New_DB$dispovp<-replace(New_DB$dispovp,New_DB$dispovp==1,"OUI UTILISE")
New_DB$dispovp<-replace(New_DB$dispovp,New_DB$dispovp==2,"OUI UTILISE PAS")
New_DB$dispovp<-replace(New_DB$dispovp,New_DB$dispovp==3,"NON")
New_DB$dispovp<-replace(New_DB$dispovp,New_DB$dispovp==0,"PAS INFO")
New_DB$dispovp<-factor(New_DB$dispovp)
New_DB<-New_DB%>%mutate(PBM_STAT_GENERAL=ifelse(is.na(PBM_STAT_GENERAL),0,PBM_STAT_GENERAL))
New_DB$PBM_STAT_GENERAL<-replace(New_DB$PBM_STAT_GENERAL,New_DB$PBM_STAT_GENERAL==1,"OUI")
New_DB$PBM_STAT_GENERAL<-replace(New_DB$PBM_STAT_GENERAL,New_DB$PBM_STAT_GENERAL==2,"NON PLACE RES")
New_DB$PBM_STAT_GENERAL<-replace(New_DB$PBM_STAT_GENERAL,New_DB$PBM_STAT_GENERAL==3,"NON PLACE AUTOUR")
New_DB$PBM_STAT_GENERAL<-replace(New_DB$PBM_STAT_GENERAL,New_DB$PBM_STAT_GENERAL==4,"NON HORAIRES")
New_DB$PBM_STAT_GENERAL<-replace(New_DB$PBM_STAT_GENERAL,New_DB$PBM_STAT_GENERAL==0,"PAS_INFO")
New_DB$PBM_STAT_GENERAL<-factor(New_DB$PBM_STAT_GENERAL)
New_DB<-New_DB%>%mutate(STAT_TRAV=ifelse(is.na(STAT_TRAV),0,STAT_TRAV))
New_DB$STAT_TRAV<-replace(New_DB$STAT_TRAV,New_DB$STAT_TRAV==1,"OUI")
New_DB$STAT_TRAV<-replace(New_DB$STAT_TRAV,New_DB$STAT_TRAV==2,"NON PLACE RES")
New_DB$STAT_TRAV<-replace(New_DB$STAT_TRAV,New_DB$STAT_TRAV==3,"NON PLACE AUTOUR")
New_DB$STAT_TRAV<-replace(New_DB$STAT_TRAV,New_DB$STAT_TRAV==0,"PAS_INFO")
New_DB$STAT_TRAV<-factor(New_DB$STAT_TRAV)
New_DB$motifor<-replace(New_DB$motifor,New_DB$motifor %in% c(22:29),"ETUDES")
New_DB$motifor<-replace(New_DB$motifor,New_DB$motifor %in% c(1:2),"DOMICILE")
New_DB$motifor<-replace(New_DB$motifor,New_DB$motifor %in% c(11:12),"TRAVAIL")
New_DB$motifor<-replace(New_DB$motifor,New_DB$motifor==21,"CRECHE")
New_DB$motifor<-replace(New_DB$motifor,New_DB$motifor %in% c(31:34),"SHOOPING")
New_DB$motifor<-replace(New_DB$motifor,New_DB$motifor %in% c(41:43),"ADMINISTRATIF")
New_DB$motifor<-replace(New_DB$motifor,New_DB$motifor %in% c(51:54),"LOISIRS")
New_DB$motifor<-replace(New_DB$motifor,New_DB$motifor %in% c(61:74),"AMENER/RECHERCHER QLQN")
New_DB$motifor<-replace(New_DB$motifor,New_DB$motifor %in% c(81:99),"AUTRES")
New_DB$motifor<-factor(New_DB$motifor)
New_DB<-New_DB%>%mutate(prisecharge=ifelse(is.na(prisecharge),0,prisecharge))
New_DB$prisecharge<-replace(New_DB$prisecharge,New_DB$prisecharge>=1,"NON")
New_DB$prisecharge<-replace(New_DB$prisecharge,New_DB$prisecharge==3,"NON")
New_DB$prisecharge<-replace(New_DB$prisecharge,New_DB$prisecharge==0,"PAS_INFO")
New_DB$prisecharge<-factor(New_DB$prisecharge)
New_DB<-New_DB%>%mutate(NAT_STAT=ifelse(is.na(NAT_STAT),0,NAT_STAT))
New_DB$NAT_STAT<-replace(New_DB$NAT_STAT,New_DB$NAT_STAT==1,"INTERDIT")
New_DB$NAT_STAT<-replace(New_DB$NAT_STAT,New_DB$NAT_STAT==2,"GRATUIT")
New_DB$NAT_STAT<-replace(New_DB$NAT_STAT,New_DB$NAT_STAT==3,"PAYANT")
New_DB$NAT_STAT<-replace(New_DB$NAT_STAT,New_DB$NAT_STAT==4,"PAYE_TIERCE")
New_DB$NAT_STAT<-replace(New_DB$NAT_STAT,New_DB$NAT_STAT==0,"PAS_INFO")
New_DB$NAT_STAT<-factor(New_DB$NAT_STAT) # on transofmre les données qualitiatives en vecteurs ce qui permet par la suite de faire des clustering par exemple.
Vec_zone<-c(101,102,103,104,105,106,107,108,109,110,111,112,113,114,117,118,135,119,120,136,121,122,123,124,125,126,137,138,127,128,129,130,131,132,115,140,116,134,141,142,143,302)
New_DB<-dplyr::filter(New_DB,tir %in% Vec_zone) #on garde que les zones où il y a des transports en communs
New_DB_filtered<-dplyr::filter(New_DB,age>=18 )
New_DB_filtered<-dplyr::filter(New_DB,csp!='ETUDES')
#table(New_DB_filtered$csp)
New_DB_filtered<-rename(New_DB_filtered,"num_menage"="NO_MEN")
vis_miss(New_DB_filtered)
#ntraj 28% on va certainement l'enlever
New_DB_filtered_etu<-dplyr::filter(New_DB,csp=="ETUDES")
New_DB_filtered_etu<-dplyr::filter(New_DB,OCCU1=="Etudiant", age %in% c(18:27))
#New_DB_filtered_etu<-dplyr::filter(New_DB,OCCU2=="NON_Con")
DB_pers_socio_etu<-New_DB_filtered_etu[,c(1,8,9,10,11,13,14,15,16,17,26,33,34,35,36)]
DB_pers_socio_etu<-DB_pers_socio_etu[!duplicated(DB_pers_socio_etu$id_pers),]
DB_pers_socio_etu<-dplyr::filter(DB_pers_socio_etu,!is.na(DB_pers_socio_etu$car_ownership))
DB_pers_socio_etu<-dplyr::filter(DB_pers_socio_etu,!is.na(DB_pers_socio_etu$age))
#vis_miss(DB_pers_socio_etu)
#table_2<-na.omit(DB_pers_socio_etu)
barplot(table(New_DB_filtered_etu$age))
afm_etu<-FAMD(base=DB_pers_socio_etu,ncp=5)
summary(afm_etu)
head(afm_etu$ind$coord,10)
pairs(afm_etu$ind$coord,cex=0.6)
md_etu<-dist(afm_etu$ind$coord)
ch_etu<-hclust(md_etu,method='ward.D2')
plot(ch_etu)
groups_etu<-cutree(ch_etu,k=2)
table(groups_etu)
pairs(afm_etu$ind$coord,col=c('cornflowerblue','yellowgreen')[groups_etu],cew=0.75)
sapply(DB_pers_socio_etu[sapply(DB_pers_socio_etu,is.numeric)],mean)
lapply(DB_pers_socio_etu[sapply(DB_pers_socio_etu,is.numeric)],function(x){tapply(x,groups_etu,mean)})
sapply(DB_pers_socio_etu[sapply(DB_pers_socio_etu,is.factor)],function(x){prop.table(table(x))})
sapply(DB_pers_socio_etu[sapply(DB_pers_socio_etu,is.factor)],function(x){prop.table(table(groups_etu,x),1)})
#Base donnée catégorie socio prof personnes
DB_pers_socio_1<-New_DB_filtered[,c(1,8,9,10,11,12,13,14,15,16,26,32,33,34,35,36)]
DB_pers_socio_1<-DB_pers_socio_1[!duplicated(DB_pers_socio_1$id_pers),]
DB_pers_socio_1<-dplyr::filter(DB_pers_socio_1,!is.na(DB_pers_socio_1$freqtcu))
DB_pers_socio_1<-dplyr::filter(DB_pers_socio_1,!is.na(DB_pers_socio_1$car_ownership))
DB_pers_socio_1<-dplyr::filter(DB_pers_socio_1,DB_pers_socio_1$zonetrav!="PAS_INFO")
#vis_miss(DB_pers_socio_1) # un peu freqtcu manquant 1% on peut l'enlever
#DB_cluster_2<-DB_cluster_1[sample(c(TRUE,FALSE),size=nrow(DB_cluster_1),replace=TRUE,prob=c(0.05,0.95)),]
afm_1<-FAMD(base=DB_pers_socio_1,ncp=5)
summary(afm_1)
#Affichage des coordonnées 5 variables latentes deux à deux orthogonales
head(afm_1$ind$coord,10)
#Mettre les individus deux à deux si on arrive à distinguer des patterns  des formes
pairs(afm_1$ind$coord,cex=0.6)
#Trouver les groupes pas évident
#Classification ascendante hiérarchique
md_1<-dist(afm_1$ind$coord)
ch_1<-hclust(md_1,method='ward.D2')
plot(ch_1)
#Le bazar mais c'est normal au vu de tous les individus , le dendograme
#2carts de hauteur entre les paliers , ça donne une idée de la distance entre les clusters , ici deux groupes pas évident , peut être 3 groupes. Ici on tatonne pas comparé aux k-means où il faut tatonner pour trouver le bon nombre de groupe
groups_1<-cutree(ch_1,k=3)
table(groups_1)
pairs(afm_1$ind$coord,col=c('cornflowerblue','yellowgreen','red')[groups_1],cew=0.75)
sapply(DB_pers_socio_1[sapply(DB_pers_socio_1,is.numeric)],mean)
lapply(DB_pers_socio_1[sapply(DB_pers_socio_1,is.numeric)],function(x){tapply(x,groups_1,mean)})
sapply(DB_pers_socio_1[sapply(DB_pers_socio_1,is.factor)],function(x){prop.table(table(x))})
sapply(DB_pers_socio_1[sapply(DB_pers_socio_1,is.factor)],function(x){prop.table(table(groups_1,x),1)})
#c(6,7,8,9,17,18,19,20,21,23,24,28,31)
DB_car_ownership<-New_DB_filtered[,c(8,9,18,26,33,34,36)]
DB_car_ownership<-DB_car_ownership[!duplicated(DB_car_ownership$id_pers),]
#DB_car_ownership<-dplyr::filter(DB_car_ownership,!is.na(DB_car_ownership$id_depl))
#DB_car_ownership<-dplyr::filter(DB_car_ownership,!is.na(DB_car_ownership$duree))
DB_car_ownership<-dplyr::filter(DB_car_ownership,!is.na(DB_car_ownership$car_ownership))
DB_car_ownership<-dplyr::filter(DB_car_ownership,!is.na(DB_car_ownership$freqtcu))
#DB_car_ownership<-dplyr::filter(DB_car_ownership,DB_car_ownership$PBM_STAT_GENERAL!="PAS_INFO")
#DB_car_ownership<-dplyr::filter(DB_car_ownership,DB_car_ownership$STAT_TRAV!="PAS_INFO")
vis_miss(DB_car_ownership)
table(DB_car_ownership$car_ownership)
afm_3<-FAMD(DB_car_ownership, ncp=5)
summary(afm_3)
head(afm_3$ind$coord)
pairs(afm_3$ind$coord,cex=0.5)
md_3<-dist(afm_3$ind$coord)
ch_3<-hclust(md_3,method="ward.D2")
plot(ch_3)
groups_3<-cutree(ch_3,k=3)
table(groups_3)
pairs(afm_3$ind$coord,col=c('cornflowerblue','yellowgreen','red')[groups_3],cew=0.75)
#lapply(DB_car_ownership[sapply(DB_car_ownership,is.numeric)],function(x){tapply(x,groups_3,sd)})
lapply(DB_car_ownership[sapply(DB_car_ownership,is.numeric)],function(x){tapply(x,groups_3,mean)})
#lapply(DB_car_ownership[sapply(DB_car_ownership,is.numeric)],function(x){tapply(x,groups_3,var)})
sapply(DB_car_ownership[sapply(DB_car_ownership,is.factor)],function(x){prop.table(table(groups_3,x),1)})
DB_trip<-New_DB_filtered[,c(20,21,22,23,26,27,28,29,30,31,33,36)]
DB_trip<-dplyr::filter(DB_trip,!is.na(DB_trip$id_traj))
DB_trip<-dplyr::filter(DB_trip,!is.na(DB_trip$ntraj))
DB_trip<-dplyr::filter(DB_trip,!is.na(DB_trip$Couteff))
DB_trip<-dplyr::filter(DB_trip,!is.na(DB_trip$car_ownership))
#DB_trip<-dplyr::filter(DB_trip,!is.na(DB_trip$D13))
#vis_miss(DB_trip)
DB_trip_2<-DB_trip[,-c(5,6,9)]
afm_4<-FAMD(DB_trip, ncp=5)
summary(afm_4)
head(afm_4$ind$coord)
pairs(afm_4$ind$coord,cex=0.5)
md_4<-dist(afm_4$ind$coord)
ch_4<-hclust(md_4,method="ward.D2")
plot(ch_4)
groups_4<-cutree(ch_4,k=3)
table(groups_4)
#pairs(afm_4$ind$coord,col=c('cornflowerblue','yellowgreen')[groups_4],cew=0.75)
#lapply(DB_trip[sapply(DB_trip,is.numeric)],function(x){tapply(x,groups_4,sd)})
lapply(DB_trip[sapply(DB_trip,is.numeric)],function(x){tapply(x,groups_4,mean)})
#lapply(DB_trip[sapply(DB_trip,is.numeric)],function(x){tapply(x,groups_4,median)})
#lapply(DB_trip[sapply(DB_trip,is.numeric)],function(x){tapply(x,groups_4,var)})
sapply(DB_trip[sapply(DB_trip,is.factor)],function(x){prop.table(table(groups_4,x),1)})
summary(DB_pers_socio_1$freqtcu)
counts<-table(DB_pers_socio_1$freqtcu)
(counts/nrow(DB_pers_socio_1))*100
barplot(counts)
title("Fréquence d'utilisation des transports en communs")
summary(DB_pers_socio_1$permis)
barplot(table(DB_pers_socio_1$permis))
summary(DB_pers_socio_1$tailmng)
#IQR(New_DB_filtered$tailmng)
(table(DB_pers_socio_1$tailmng)/nrow(DB_pers_socio_1))*100
barplot(table(DB_pers_socio_1$tailmng))
title("Répartition du nombre de personnes par foyer")
#hist(table(DB_pers_socio_1$tailmng))
summary(DB_pers_socio_1$car_ownership)
table(DB_pers_socio_1$car_ownership)
barplot(table(DB_pers_socio_1$car_ownership))
(table(DB_pers_socio_1$car_ownership)/nrow(DB_pers_socio_1))*100
DB_var_zg<-New_DB_filtered[!duplicated(New_DB_filtered$id_pers),]
#DB_var_zg<-allgreI faire avec allegreI
#DB_var_zg<-New_DB_filtered%>%group_by(tir) faire un group_by tir et trouver des variables relatives au trajet
#DB_ABV<-
DB_ABV<-DB_pers_socio_1
DB_ABV<-DB_ABV%>%group_by(tir)%>%mutate(NB_permis=sum(permis=="YES"))
DB_ABV<-DB_ABV%>%group_by(tir)%>%mutate(NB_proprietaire_car=sum(car_ownership=="OUI"))
DB_ABV<-DB_ABV%>%group_by(tir)%>%mutate(NB_actif=sum(OCCU1=="TravailPleinT" | OCCU1=="TravailPartT"))
#DB_ABV<-DB_ABV%>%group_by(tir)%>%mutate(NB_inactif=sum(OCCU1=="RSA" | OCCU1=="Reste_auFoyer" | OCCU1=="Autre")) #pas d'inactif à vérifier
#DB_ABV<-DB_ABV%>%group_by(tir)%>%mutate(NB_retraites=sum(OCCU1=="Retraite")) #pas de retraité à vérifier
DB_ABV<-DB_ABV%>%group_by(tir)%>%mutate(NB_high_profil=sum(csp=="HIGH_STATUT"))
DB_ABV<-DB_ABV%>%group_by(tir)%>%mutate(NB_low_profil=sum(csp=="LOW_STATUT"))
DB_ABV<-DB_ABV%>%group_by(tir)%>%mutate(NB_BAC_PLUS=sum(etabscol=="BAC+2" | etabscol=="BAC>=3"))
DB_ABV<-DB_ABV%>%group_by(tir)%>%mutate(NB_DIP_PRO=sum(etabscol=="BEP" | etabscol=="CAP"))
DB_ABV<-DB_ABV%>%group_by(tir)%>%mutate(NB_ABO_TC_GRATUIT=sum(ABO_TC=="OUI_GRATUIT"))
DB_ABV<-DB_ABV%>%group_by(tir)%>%mutate(NB_ABO_TC_PAYANT=sum(ABO_TC=="OUI_PAYANT"))
#DB_ABV<-DB_ABV%>%group_by(tir)%>%mutate(NB_TT=sum(travdom=="OUI"))
DB_ABV<-DB_ABV%>%group_by(tir)%>%mutate(NB_trav_ville=sum(zonetrav=="CENTRE_VILLE"))
DB_ABV<-DB_ABV%>%group_by(tir)%>%mutate(NB_trav_agglo=sum(zonetrav=="AGGLO_PROCHE"))
DB_ABV<-DB_ABV%>%group_by(tir)%>%mutate(NB_trav_loin=sum(zonetrav=="HORS_GRENOBLE"))
#DB_ABV<-DB_ABV%>%group_by(tir)%>%mutate(NB_voiture_dispo_utilisee=sum(dispovp=="OUI UTILISE"))
#DB_ABV<-DB_ABV%>%group_by(tir)%>%mutate(NB_voiture_dispo_pas_utilisee=sum(dispovp=="OUI UTILISE PAS"))
#permis
#table(DB_ABV$freqtcu,DB_ABV$permis)
chisq.test(table(DB_ABV$freqtcu,DB_ABV$NB_permis)) #pour deux variables qualitatives
summary(lm(DB_ABV$freqtcu2~DB_ABV$NB_permis,data=DB_ABV))
#chisq p<2.2-16
#lm 1.472 10-6
#tailmng
fisher.test(table(DB_ABV$freqtcu,DB_ABV$tailmng))
summary(lm(DB_ABV$freqtcu2~DB_ABV$tailmng,data = DB_ABV))
# p-value 0.07685
#R^2 0.005996
#nb_actif
fisher.test(table(DB_ABV$freqtcu,DB_ABV$NB_actif),simulate.p.value = TRUE)
summary(lm(DB_ABV$freqtcu2~DB_ABV$NB_actif,data=DB_ABV))
#p-value 0.0004998
#R^2 0.0007595
#high_profil
fisher.test(table(DB_ABV$freqtcu,DB_ABV$NB_high_profil),simulate.p.value = TRUE)
summary(lm(DB_ABV$freqtcu2~DB_ABV$NB_high_profil,data=DB_ABV))
# pvalue = 0.0004998
#R^2 = 0.001598
#low_profil
fisher.test(table(DB_ABV$freqtcu,DB_ABV$NB_low_profil),simulate.p.value = TRUE)
summary(lm(DB_ABV$freqtcu2~DB_ABV$NB_low_profil,data=DB_ABV))
#p value = 0.0004998
#R^2 0.003519
#trav_ville
fisher.test(table(DB_ABV$freqtcu,DB_ABV$NB_trav_ville),simulate.p.value = TRUE)
summary(lm(DB_ABV$freqtcu2~DB_ABV$NB_trav_ville))
#p value = 0.0004998
#R^2 = 0.005998
#trav_agglo
fisher.test(table(DB_ABV$freqtcu,DB_ABV$NB_trav_agglo),simulate.p.value = TRUE)
summary(lm(DB_ABV$freqtcu2~DB_ABV$NB_trav_agglo))
#R^2 0.01874
#trav_loin
fisher.test(table(DB_ABV$freqtcu,DB_ABV$NB_trav_loin),simulate.p.value = TRUE)
summary(lm(DB_ABV$freqtcu2~DB_ABV$NB_trav_loin))
#R^2 0.01611
#voiture_dispo_utilisee
#fisher.test(table(DB_ABV$freqtcu,DB_ABV$NB_voiture_dispo_utilisee),simulate.p.value = TRUE)
#summary(lm(DB_ABV$freqtcu2~DB_ABV$NB_voiture_dispo_utilisee))
#R^2 0.04952
#voiture_pas_utilisee
#fisher.test(table(DB_ABV$freqtcu,DB_ABV$NB_voiture_dispo_pas_utilisee),simulate.p.value = TRUE)
#summary(lm(DB_ABV$freqtcu2~DB_ABV$NB_voiture_dispo_pas_utilisee))
#R^2 0.04983
#ABO_TC_GRATUIT
fisher.test(table(DB_ABV$freqtcu,DB_ABV$NB_ABO_TC_GRATUIT),simulate.p.value = TRUE)
summary(lm(DB_ABV$freqtcu2~DB_ABV$NB_ABO_TC_GRATUIT))
#R^2 0.03367
#ABO_TC_PAYANT
fisher.test(table(DB_ABV$freqtcu,DB_ABV$NB_ABO_TC_PAYANT),simulate.p.value = TRUE)
summary(lm(DB_ABV$freqtcu2~DB_ABV$NB_ABO_TC_PAYANT))
#R^2 0.08841
#BAC_PLUS
fisher.test(table(DB_ABV$freqtcu,DB_ABV$NB_BAC_PLUS),simulate.p.value = TRUE)
summary(lm(DB_ABV$freqtcu2~DB_ABV$NB_BAC_PLUS))
#R^2 0.005318
#DIP_PRO
fisher.test(table(DB_ABV$freqtcu,DB_ABV$NB_DIP_PRO),simulate.p.value = TRUE)
summary(lm(DB_ABV$freqtcu2~DB_ABV$NB_DIP_PRO))
#R^2 0.009518
D=data.frame(DB_ABV$NB_DIP_PRO,DB_ABV$NB_BAC_PLUS,DB_ABV$NB_ABO_TC_GRATUIT,DB_ABV$NB_ABO_TC_PAYANT,DB_ABV$NB_trav_loin,DB_ABV$NB_permis,DB_ABV$NB_trav_loin,DB_ABV$NB_trav_agglo,DB_ABV$NB_trav_ville,DB_ABV$NB_low_profil,DB_ABV$NB_high_profil,DB_ABV$NB_actif)
library(corrplot)
MC<-cor(D)
#MC<-cor(DB_ABV[,-c(21,22,29)])
symnum(MC,abbr.colnames=FALSE)
#corrplot(MC,type="upper", order="hclust", tl.col="black", tl.srt=50)
library(FactoMineR)
library(factoextra)
my_data <- DB_pers_socio_etu
# Supposons que 'my_data' est votre dataframe
my_data <- as.data.frame(lapply(my_data, factor))
acm_results <- MCA(my_data, graph = TRUE)
summary(acm_results)
fviz_mca_ind(acm_results, col.ind = "cos2",
gradient.cols = c("#00AFBB", "#E7B800", "#FC4E07"),
repel = TRUE)
fviz_mca_var(acm_results, col.var = "cos2",
gradient.cols = c("#00AFBB", "#E7B800", "#FC4E07"),
repel = TRUE)
data_2<-DB_projet_full[,c(22:30)]
vis_miss(
data_2,
cluster = FALSE,
sort_miss = FALSE,
show_perc = TRUE,
show_perc_col = TRUE,
large_data_size = 9e+06,
warn_large_data = TRUE
)
data_2<-DB_projet_full[,c(30:44)]
vis_miss(
data_2,
cluster = FALSE,
sort_miss = FALSE,
show_perc = TRUE,
show_perc_col = TRUE,
large_data_size = 9e+06,
warn_large_data = TRUE
)
library(FactoMineR)
library(factoextra)
my_data <- DB_pers_socio_etu
my_data <- my_data %>%
select(all_of(c(3, 7, 9, 12, 13, 14, 15)))
# Supposons que 'my_data' est votre dataframe
my_data <- as.data.frame(lapply(my_data, factor))
acm_results <- MCA(my_data, graph = TRUE)
summary(acm_results)
View(my_data)
library(FactoMineR)
library(factoextra)
my_data <- DB_pers_socio_etu
my_data <- my_data %>%
select(all_of(c(3, 7, 12, 13, 14, 15)))
# Supposons que 'my_data' est votre dataframe
my_data <- as.data.frame(lapply(my_data, factor))
acm_results <- MCA(my_data, graph = TRUE)
summary(acm_results)
library(FactoMineR)
library(factoextra)
my_data <- DB_pers_socio_etu
my_data <- my_data %>%
select(all_of(c(3, 7, 12, 14, 15)))
# Supposons que 'my_data' est votre dataframe
my_data <- as.data.frame(lapply(my_data, factor))
acm_results <- MCA(my_data, graph = TRUE)
summary(acm_results)
library(FactoMineR)
library(factoextra)
my_data <- DB_pers_socio_etu
my_data <- my_data %>%
select(all_of(c(3, 7, 12, 13, 14, 15)))
# Supposons que 'my_data' est votre dataframe
my_data <- as.data.frame(lapply(my_data, factor))
acm_results <- MCA(my_data, graph = TRUE)
summary(acm_results)
View(DB_pers_socio_1)
View(DB_pers_socio_etu)
View(DB_pers_socio_etu)
library(FactoMineR)
library(factoextra)
my_data <- DB_pers_socio_1 #pour les étudiants DB_pers_socio_etu
my_data <- my_data %>%
select(all_of(c(3, 7, 8, 13, 14, 15, 16))) # pour les étudiants select(all_of(c(3, 7, 12, 13, 14, 15)))
# Supposons que 'my_data' est votre dataframe
my_data <- as.data.frame(lapply(my_data, factor))
acm_results <- MCA(my_data, graph = TRUE)
summary(acm_results)
library(FactoMineR)
library(factoextra)
my_data <- DB_pers_socio_1 #pour les étudiants DB_pers_socio_etu
my_data <- my_data %>%
select(all_of(c(3, 7, 8, 12, 14, 15, 16))) # pour les étudiants select(all_of(c(3, 7, 12, 13, 14, 15)))
# Supposons que 'my_data' est votre dataframe
my_data <- as.data.frame(lapply(my_data, factor))
acm_results <- MCA(my_data, graph = TRUE)
summary(acm_results)
library(FactoMineR)
library(factoextra)
my_data <- DB_pers_socio_1 #pour les étudiants DB_pers_socio_etu
my_data <- my_data %>%
select(all_of(c(3, 7, 8, 13, 14, 15, 16))) # pour les étudiants select(all_of(c(3, 7, 12, 13, 14, 15)))
# Supposons que 'my_data' est votre dataframe
my_data <- as.data.frame(lapply(my_data, factor))
acm_results <- MCA(my_data, graph = TRUE)
summary(acm_results)
library(FactoMineR)
library(factoextra)
my_data <- DB_pers_socio_1 #pour les étudiants DB_pers_socio_etu
my_data <- my_data %>%
select(all_of(c(3, 8, 13, 14, 15, 16))) # pour les étudiants select(all_of(c(3, 7, 12, 13, 14, 15)))
# Supposons que 'my_data' est votre dataframe
my_data <- as.data.frame(lapply(my_data, factor))
acm_results <- MCA(my_data, graph = TRUE)
summary(acm_results)
library(FactoMineR)
library(factoextra)
my_data <- DB_pers_socio_1 #pour les étudiants DB_pers_socio_etu
my_data <- my_data %>%
select(all_of(c(3, 7,  13, 14, 15, 16))) # pour les étudiants select(all_of(c(3, 7, 12, 13, 14, 15)))
# Supposons que 'my_data' est votre dataframe
my_data <- as.data.frame(lapply(my_data, factor))
acm_results <- MCA(my_data, graph = TRUE)
summary(acm_results)
library(FactoMineR)
library(factoextra)
my_data <- DB_pers_socio_1 #pour les étudiants DB_pers_socio_etu
my_data <- my_data %>%
select(all_of(c(3, 7, 8, 13, 14, 15, 16))) # pour les étudiants select(all_of(c(3, 7, 12, 13, 14, 15)))
# Supposons que 'my_data' est votre dataframe
my_data <- as.data.frame(lapply(my_data, factor))
acm_results <- MCA(my_data, graph = TRUE)
#summary(acm_results)
View(New_DB)
library(FactoMineR)
library(factoextra)
my_data <- DB_pers_socio_1 #pour les étudiants DB_pers_socio_etu
my_data <- New_DB %>%
select(age, ABO_TC, freqtcu) # pour les étudiants select(all_of(c(3, 7, 12, 13, 14, 15)))
# Supposons que 'my_data' est votre dataframe
my_data <- as.data.frame(lapply(my_data, factor))
acm_results <- MCA(my_data, graph = TRUE)
#summary(acm_results)
